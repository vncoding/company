<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<http use-expressions="true">

        <form-login login-processing-url="/resources/j_spring_security_check"
			login-page="/login" authentication-failure-url="/login?login_error=t" />
		<logout logout-url="/resources/j_spring_security_logout" />
		<intercept-url pattern="/login*" access="permitAll()" />
		<intercept-url pattern="/resources/**" access="permitAll()" />
		<intercept-url pattern="/**" access="isAuthenticated()" />

    </http>

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <password-encoder hash="md5" />
            <jdbc-user-service
                data-source-ref="dataSource"
                users-by-username-query="select u.username, u.password,'TRUE' from user u where u.username = ?"
                authorities-by-username-query=
                        "select u.username, u.role as authority
                        from user u
                        where u.username = ?"
            />
        </authentication-provider>
    </authentication-manager>
</beans:beans>